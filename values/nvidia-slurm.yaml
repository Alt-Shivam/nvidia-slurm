# SPDX-FileCopyrightText: Copyright (C) SchedMD LLC.
# SPDX-License-Identifier: Apache-2.0

#
# Debug configuration.
# @ignored
debug:
  #
  # -- (bool)
  # Enables debug configuration.
  enabled: false
  #
  # -- (bool)
  # Allow a locally running operator to communicate with slurm cluster via port-forward.
  # NOTE: use when running the operator in a local debugger.
  localOperator: true

#
# -- (string)
# Overrides the name of the release.
nameOverride: ""

#
# -- (string)
# Overrides the full name of the release.
fullnameOverride: ""

#
# -- (string)
# Overrides the namespace of the release.
namespaceOverride: ""

#
# -- (list)
# Set the secrets for image pull.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
  # - name: regcred

#
# -- (string)
# Set the image pull policy.
imagePullPolicy: IfNotPresent

#
# -- (string)
# Set the priority class to use.
# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass
priorityClassName: ""

#
# Slurm JWT authentication.
jwt:
  #
  # JWT hs256 configurations.
  hs256:
    #
    # -- (string)
    # The existing secret to use otherwise one will be generated.
    existingSecret: ""

#
# Slurm configurations.
slurm:
  #
  # Slurm authentication configurations.
  auth:
    #
    # -- (string)
    # The existing secret to use otherwise one will be generated.
    existingSecret: ""
  #
  # -- (string)
  # Extra slurmdbd configuration lines to append to `slurmdbd.conf`.
  # WARNING: Values can override existing ones.
  # Ref: https://slurm.schedmd.com/slurmdbd.conf.html
  extraSlurmdbdConf: |-
    CommitDelay=1
  #
  # -- (string)
  # Extra slurm configuration lines to append to `slurm.conf`.
  # WARNING: Values can override existing ones.
  # Ref: https://slurm.schedmd.com/slurm.conf.html
  extraSlurmConf: |-
    SchedulerParameters=batch_sched_delay=20,bf_continue,bf_interval=300,bf_min_age_reserve=10800,bf_resolution=600,bf_yield_interval=1000000,partition_job_depth=500,sched_max_job_start=200,sched_min_interval=2000000
    DefMemPerCPU=1
    # Fix cgroup configuration
    #ProctrackType=proctrack/cgroup
    #TaskPlugin=task/cgroup
  #
  # -- (map[string]string)
  # Optional raw Slurm configuration files, as a map.
  # The map key represents the config file by name; the map value represents config file contents as a string.
  # Ref: https://slurm.schedmd.com/man_index.html#configuration_files
  configFiles:
    # NVIDIA GPU configuration instead of AMD
    gres.conf: |
      Name=gpu Type=h100 File=/dev/nvidia0
      Name=gpu Type=h100 File=/dev/nvidia1
      Name=gpu Type=h100 File=/dev/nvidia2
      Name=gpu Type=h100 File=/dev/nvidia3
      Name=gpu Type=h100 File=/dev/nvidia4
      Name=gpu Type=h100 File=/dev/nvidia5
      Name=gpu Type=h100 File=/dev/nvidia6
      Name=gpu Type=h100 File=/dev/nvidia7
    gres.conf: |
      AutoDetect=off
      #NodeName=slurmd-[0-9] Name=gpu Type=H100 File=/dev/nvidia[0-7] CPUs=0-4 Cores=0-2
      NodeName=hgx-gpu-compute-[140,150] Name=gpu Type=H100 File=/dev/nvidia[0-7]

  #
  # -- (map[string]string)
  # The Prolog scripts for compute nodesets, as a map.
  prologScripts: {}
  #
  # -- (map[string]string)
  # The Epilog scripts for compute nodesets, as a map.
  epilogScripts: {}

#
# Slurm authcred (sackd) configurations.
authcred:
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/sackd
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  resources: {}

#
# Slurm controller (slurmctld) configurations.
controller:
  #
  # -- (bool)
  # Enables the controller node.
  enabled: true
  #
  # -- (integer)
  # Set the number of replicas to deploy.
  replicas: 1
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/slurmctld
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (string)
  # Set the priority class to use.
  priorityClassName:
  #
  # -- (object)
  # Set affinity for Kubernetes Pod scheduling.
  affinity: {}
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  resources: {}
  #
  # Define a persistent volume for the slurm controller to store its save-state.
  persistence:
    #
    # -- (string)
    # Name of an existing `PersistentVolumeClaim` to use instead of creating one from definition.
    existingClaim: ""
    #
    # -- (object)
    # Create a `PersistentVolumeClaim` with these annotations.
    annotations: {}
    #
    # -- (object)
    # Create a `PersistentVolumeClaim` with these labels.
    labels: {}
    #
    # -- (string)
    # Create a `PersistentVolumeClaim` with this storage class.
    storageClass: local-path
    #
    # -- (list)
    # Create a `PersistentVolumeClaim` with these access modes.
    accessModes:
      - ReadWriteOnce
    #
    # -- (string)
    # Create a `PersistentVolumeClaim` with this storage size.
    size: 4Gi
    #
    # -- (object)
    # Selector to match an existing `PersistentVolume`.
    selector: {}

#
# Slurm compute (slurmd) configurations.
compute:
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Default image for the nodeset pod (slurmd)
  # Each nodeset may override this setting.
  image:
    #
    # -- (string)
    # Set the image repository to use - CHANGE THIS TO YOUR NVIDIA IMAGE
    repository: shivankcoredge/nvidia-slurm
    #
    # -- (string)
    # Set the image tag to use.
    tag: "v0.5"
  #
  # -- (list)
  # Slurm NodeSets by object list.
  nodesets:
      #
      # -- (string)
      # Name of NodeSet. Must be unique.
    - name: nvidia-compute
      #
      # -- (bool)
      # Enables the NodeSet in Slurm.
      enabled: true
      #
      # -- (integer)
      # Set the number of replicas to deploy.
      # NOTE: if empty, all nodes matching affinity will have a replica (like DaemonSet).
      # replicas: 1
      #
      # -- (int)
      # The minimum number of seconds for which a newly created NodeSet Pod should be ready
      minReadySeconds: 0
      #
      # -- (string)
      # Set the image pull policy.
      imagePullPolicy: IfNotPresent
      #
      # Set the image to use.
      image:
        #
        # -- (string)
        # Set the image repository to use.
        repository: ""
        #
        # -- (string)
        # Set the image tag to use.
        tag: ""
      #
      # -- (string)
      # Set the priority class to use.
      priorityClassName: ""
      #
      # -- (object)
      # Set container resource requests and limits for Kubernetes Pod scheduling.
      resources:
        limits:
          cpu: 1
          memory: 2Gi
          # NVIDIA GPU resource instead of AMD
          nvidia.com/gpu: 8
      #
      # -- (map)
      # Selector which must match a node's labels for the pod to be scheduled on that node.
      nodeSelector:
        kubernetes.io/os: linux
        # Add GPU node selector if you have specific GPU nodes
        # accelerator: nvidia-tesla-v100  # adjust based on your GPU type
      #
      # -- (object)
      # Set affinity for Kubernetes Pod scheduling.
      affinity: {}
      #
      # -- (object)
      # Set the update strategy configuration.
      updateStrategy:
        #
        # -- (string)
        # Set the update strategy type.
        type: RollingUpdate
        #
        # -- (object)
        # Define the rolling update policy.
        rollingUpdate:
          #
          # -- (string)
          # The maximum number of pods that can be unavailable during the update.
          maxUnavailable: 20%
          #
          # -- (int)
          # Partition indicates the number of NodeSet pods that should be
          # not be updated to the latest version.
          partition: 0
          #
          # -- (bool)
          # Pause will halt rollingUpdate while this value is true.
          paused: false
      #
      # -- (object)
      # The policy used for PVCs created from the NodeSet VolumeClaimTemplates.
      persistentVolumeClaimRetentionPolicy:
        #
        # -- (string)
        # WhenDeleted specifies what happens to PVCs created from NodeSet
        whenDeleted: Retain
        whenScaled: Retain
      #
      # --(list)
      # List of claims that pods are allowed to reference.
      volumeClaimTemplates: []
      #
      # -- (object)
      # Partition describes the partition created specifically for this NodeSet to be added.
      partition:
        #
        # -- (bool)
        # Enables this NodeSet's partition line to be added in Slurm.
        enabled: true
        #
        # -- (string)
        # Extra Slurm partition configuration appended onto the partition line.
        config: >-
          State=UP
          MaxTime=INFINITE
      #
      # -- (string)
      #
      nodeGres: "gpu:h100:8"
      #
      # -- (list)
      # Set Slurm node Features as a list(string).
      nodeFeatures:
        - nvidia
        - cuda
        - h100
        - compute_90
      #
      # -- (string)
      # Set Slurm node weight for Slurm scheduling.
      nodeWeight: 1
      # -----------------------
      # NVIDIA-specific environment variables and mounts
      extraEnv:
        - name: NVIDIA_VISIBLE_DEVICES
          value: "all"
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility"
        - name: CUDA_VERSION
          value: "12.6"
        - name: CUDA_HOME
          value: "/usr/local/cuda"
        - name: CUDA_PATH
          value: "/usr/local/cuda"
        - name: LD_LIBRARY_PATH
          value: "/usr/local/cuda/lib64:/usr/local/nvidia/lib64"
        - name: PATH
          value: "/usr/local/cuda/bin:/usr/local/nvidia/bin:{{ .Values.globalDefaultPath }}"
      extraVolumeMounts:
        # Mount NVIDIA driver from host if needed
        - name: nvidia-driver
          mountPath: /usr/local/nvidia
          readOnly: true
        # Mount CUDA toolkit if not already in the container
        - name: cuda-toolkit
          mountPath: /usr/local/cuda
          readOnly: true
      extraVolumes:
        # NVIDIA driver volume (adjust path based on your setup)
        - name: nvidia-driver
          hostPath:
            path: /usr/local/nvidia
            type: DirectoryOrCreate
        # CUDA toolkit volume (adjust path based on your setup)
        - name: cuda-toolkit
          hostPath:
            path: /usr/local/cuda
            type: DirectoryOrCreate
  #
  # -- (list)
  # Slurm Partitions by object list.
  partitions:
      #
      # -- (string)
      # Name of Partition. Must be unique.
    - name: gpu
      #
      # -- (bool)
      # Enables the partition in Slurm.
      enabled: true
      #
      # -- (list)
      # NodeSets to put into this Partition by name/key.
      nodesets:
        - nvidia-compute
      #
      # -- (string)
      # Extra Slurm partition configuration appended onto the partition line.
      config: >-
        State=UP
        Default=YES
        MaxTime=INFINITE
    - name: all
      #
      # -- (bool)
      # Enables the partition in Slurm.
      enabled: true
      #
      # -- (list)
      # NodeSets to put into this Partition by name/key.
      # NOTE: 'ALL' is a Slurm meta value to mean all nodes in the system.
      nodesets:
        - ALL
      #
      # -- (string)
      # Extra Slurm partition configuration appended onto the partition line.
      config: >-
        State=UP
        MaxTime=INFINITE

#
# Slurm accounting (slurmdbd) configurations.
accounting:
  #
  # -- (bool)
  # Enables accounting services.
  enabled: true
  #
  # -- (integer)
  # Set the number of replicas to deploy.
  replicas: 1
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/slurmdbd
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (object)
  # Set affinity for Kubernetes Pod scheduling.
  affinity: {}
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  resources: {}
  #
  # Configuration for an external accounting instance (slurmdbd).
  external:
    #
    # -- (bool)
    # Use an external acounting instance (slurmdbd) instead of deploying one.
    enabled: false
    #
    # -- (string)
    # The external acounting instance (slurmdbd) host.
    host: ""
    #
    # -- (integer)
    # The external acounting instance (slurmdbd) port.
    port: 6819

#
# `bitnami/mariadb` subchart configurations.
mariadb:
  enabled: true
  auth:
    username: slurm
    database: slurm_acct_db
    existingSecret: "slurm-mariadb-passwords"
  initdbScripts:
    # NOTE: https://slurm.schedmd.com/accounting.html#slurm-accounting-configuration-before-build
    slurm-accounting.sql: |-
      SET GLOBAL innodb_buffer_pool_size=(4 * 1024 * 1024 * 1024);
      SET GLOBAL innodb_log_file_size=(64 * 1024 * 1024);
      SET GLOBAL innodb_lock_wait_timeout=900;
      SET GLOBAL max_allowed_packet=(16 * 1024 * 1024);
  primary:
    persistence:
      enabled: false
      existingClaim: ""
      storageClass: local-path
      labels: {}
      annotations: {}
      accessModes:
        - ReadWriteOnce
      size: 8Gi
      selector: {}
    priorityClassName: ""
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
  affinity: {}
  resources: {}

#
# Slurm REST API (slurmrestd) configurations.
restapi:
  #
  # -- (bool)
  # Enables restapi services.
  enabled: true
  #
  # -- (integer)
  # Set the number of replicas to deploy.
  replicas: 1
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/slurmrestd
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (string)
  # Set the priority class to use.
  priorityClassName: ""
  #
  # -- (object)
  # Set affinity for Kubernetes Pod scheduling.
  affinity: {}
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  resources: {}

#
# `slurm-exporter` subchart configurations.
slurm-exporter:
  exporter:
    enabled: true
    secretName: "slurm-token-exporter"
